.cm-editor {
  font-family: Inconsolata, monospace;
  height: 100%;
}

.cm-lineNumbers {
  align-items: flex-end;
  padding-right: #{10 / $base-font-size}rem;
}

.cm-lineNumbers .cm-gutterElement {
  @include themify() {
    color: getThemifyVariable('inactive-text-color');
  }
}

.cm-scroller .cm-content {
  padding-top: #{25 / $base-font-size}rem;
}

.cm-line {
	padding-left: #{5 / $base-font-size}rem;
}

.cm-tooltip-lint {
  @include themify() {
    background-color: getThemifyVariable('modal-background-color');
    border: 1px solid getThemifyVariable('modal-border-color');
    box-shadow: 0 12px 12px getThemifyVariable('shadow-color');
    color: getThemifyVariable('primary-text-color');
  }
  border-radius: 2px;
  font-family: Montserrat, sans-serif;
}

.cm-gutters {
  @include themify() {
    background-color: getThemifyVariable('editor-gutter-color');
    border-color: getThemifyVariable('ide-border-color');
  }
}

/*
  Search dialog
*/

.CodeMirror-dialog {
  position: fixed;
  top: 0;
  left: 50%;
  margin-left: - #{552/2/$base-font-size}rem;

  z-index: 10;

  width: 580px;
  font-family: Montserrat, sans-serif;

  padding: #{8 / $base-font-size}rem #{10 / $base-font-size}rem #{5 / $base-font-size}rem #{9 / $base-font-size}rem;

  border-radius: 2px;

  @include themify() {
    background-color: getThemifyVariable('modal-background-color');
    box-shadow: 0 12px 12px 0 getThemifyVariable('shadow-color');
    border: solid 0.5px getThemifyVariable('modal-border-color');
  }
}

.CodeMirror-find-popup-container {
  display: flex;
  flex-wrap: wrap-reverse;
  justify-content: space-between;
  align-items: stretch;
}

.Toggle-replace-btn-div {
  padding: 0;
}

.Toggle-replace-btn-div > button {
  width: 100%;
  height: 100%;
}

.CodeMirror-search-modifiers {
  margin-left: #{10 / $base-font-size}rem;
}

.CodeMirror-search-results {
  margin: 0 #{20 / $base-font-size}rem;
  width: #{75 / $base-font-size}rem;
  font-size: #{12/$base-font-size}rem;
}

.CodeMirror-find-controls {
  display: flex;
}
.CodeMirror-search-inputs {
  width: 30%;
  margin-left: 10px;
}
.CodeMirror-replace-div {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.CodeMirror-search-controls {
  width: 60%;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-end;
}
.CodeMirror-replace-controls {
  display: flex;
  margin-left: #{10 / $base-font-size}rem;
}

.CodeMirror-replace-options {
  width: #{552 / $base-font-size}rem;
  height: #{65 / $base-font-size}rem;
  display: flex;
  justify-content: center;
  align-items: center;
}
.CodeMirror-replace-options button {
  width: #{200 / $base-font-size}rem;
}

.CodeMirror-search-title {
  display: block;
  margin-bottom: #{12 / $base-font-size}rem;

  font-size: #{21 / $base-font-size}rem;
  font-weight: bold;
}

.CodeMirror-search-field {
  display: block;
  width: 100%;
  max-width: #{166/$base-font-size}rem;
  margin-bottom: #{4 / $base-font-size}rem;
  @include themify() {
    color: getThemifyVariable('input-text-color');
    background-color: getThemifyVariable('input-secondary-background-color');
    border: solid 0.5px getThemifyVariable('button-border-color');
    &::placeholder {
      color: getThemifyVariable('inactive-text-color');
    }
  }
}

.CodeMirror-search-nav {
  display: flex;
  align-items: center;
}

.CodeMirror-search-count {
  display: block;
  height: #{20 / $base-font-size}rem;
  text-align: right;
}

.CodeMirror-search-actions {
  display: flex;
  justify-content: space-between;
}

.CodeMirror-search-modifiers {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.CodeMirror-search-modifier-button {
  @include themify() {
    // @extend %button;
    padding: #{2 / $base-font-size}rem #{7 / $base-font-size}rem;
    border: 2px solid transparent;
    &:hover {
      border-color: getThemifyVariable("button-border-color");
    }

  }
  width: #{35 / $base-font-size}rem;
  height: #{35 / $base-font-size}rem;

  & + & {
    margin-left: #{3 / $base-font-size}rem;
  }

  word-break: keep-all;
  white-space: nowrap;

  &[aria-checked="true"] {
    @include themify() {
      color: getThemifyVariable("heavy-text-color");
      background-color: getThemifyVariable("button-secondary-background-color");
      border-color: getThemifyVariable("button-border-color");
    }
  }
}

/*
  Previous / Next buttons
*/

// Visually hide button text
.CodeMirror-search-button .label {
  @extend %hidden-element;
}

.CodeMirror-search-button {
  margin-right: #{10 / $base-font-size}rem;
}

// LP: this is for the right gutter scrollbar -- need to implement
.CodeMirror-search-match {
  background: gold;
  border-top: #{1 / $base-font-size}rem solid orange;
  border-bottom: #{1 / $base-font-size}rem solid orange;
  box-sizing: border-box;
  opacity: .5;
}

/*
  Close button
*/
  .CodeMirror-close-button-container {
  display: flex;
  align-items: center;
}

// foldgutter
.cm-foldPlaceholder {
  text-shadow: none;
  border-radius: 5px;
  opacity: 1;
  font-weight: normal;
  display: inline-block;
  vertical-align: middle;
  height: 0.85em;
  line-height: 0.7;
  padding: 0 #{5 / $base-font-size}rem;
  font-family: serif;
  cursor: pointer;
}


.line-runtime-error + .cm-activeLineGutter {
  background-color: rgb(255, 95, 82);
  opacity: 0.3;
}

.line-runtime-error {
  background-color: rgb(255, 95, 82) !important;
  opacity: 0.3;
}

.editor-holder {
  height: calc(100% - #{29 / $base-font-size}rem);
  width: 100%;
  position: absolute;
  @include themify() {
    border: 1px solid getThemifyVariable('ide-border-color');
  }
  &.editor-holder--hidden .CodeMirror {
    display: none;
  }
}

.editor__header {
  height: #{29 / $base-font-size}rem;
}

.editor__file-name {
  @include themify() {
    color: getThemifyVariable('primary-text-color');
  }
  height: #{29 / $base-font-size}rem;
  padding-top: #{7 / $base-font-size}rem;
  padding-left: #{56 / $base-font-size}rem;
  font-size: #{12 / $base-font-size}rem;
  display: flex;
  justify-content: space-between;
}

.editor__unsaved-changes {
  margin-left: #{2 / $base-font-size}rem;
}

/** Inline abbreviation preview */


// TODO: style tags within the modal -- has an autogenerated CSS class
// https://github.com/emmetio/codemirror6-plugin/blob/de142116cbe4003c22a79436351ead9b600ae6e3/src/tracker/index.ts#L295

.emmet-preview {
  @extend %modal;
  position: absolute;
  @include themify() {
    background: getThemifyVariable('background-color');
  }
  // Note: unsets padding added by .cm-scroller .cm-content
  & .cm-scroller .cm-content {
    padding: 0;
  }
  & .cm-editor {
    height: auto;
    max-width: #{400 / $base-font-size}rem;
    max-height: #{300 / $base-font-size}rem;
    border: none;
  }
}

.emmet-preview_error {
    display: none;
}

.emmet-preview .CodeMirror-cursors {
    visibility: hidden !important;
}

.emmet-preview .emmet-error-snippet-message {
    padding: 5px;
}

// TODO: don't see an equivalent
.emmet-open-tag, .emmet-close-tag {
    text-decoration: underline;
}
